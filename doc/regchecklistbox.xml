<?xml version="1.0" encoding="utf-8"?>
<fpdoc-descriptions>
  <package name="RegistryControls">
    <!--
  ====================================================================
    regchecklistbox
  ====================================================================
-->
    <module name="regchecklistbox">
      <element name="TCustomRegCheckListBox">
        <short>Custom-Klasse für die Einführung des Registryzugriffes</short>
      </element>
      <element name="TCustomRegCheckListBox.FRegistrySource">
        <short>s. RegistrySource</short>
      </element>
      <element name="TCustomRegCheckListBox.FRegistrySettings">
        <short>s. RegistrySettings</short>
      </element>
      <element name="TCustomRegCheckListBox.FIsModified">
        <short>s. IsModified</short>
      </element>
      <element name="TCustomRegCheckListBox.RefreshRegistrySettings">
        <short>RootKeys aus TRegistrySource aktualisieren</short>
      </element>
      <element name="TCustomRegCheckListBox.RefreshRegistrySettings.Result">
        <short>Ergebnis des Vorganges</short>
        <descr>Wenn erfolgreich dann True</descr>
      </element>
      <element name="TCustomRegCheckListBox.ReadWriteInfo">
        <short>Datenwerte lesen oder schreiben</short>
      </element>
      <element name="TCustomRegCheckListBox.ReadWriteInfo.aRead">
        <short>Vorgangsflag, (s. regconst.pas)</short>
        <descr>Wenn aRead=Read dann Datenwert aus der Registry lesen. Wenn aRead=Write dann Datenwert in die Registry schreiben.</descr>
      </element>
      <element name="TCustomRegCheckListBox.GetItemsByRegistry">
        <short>Daten aus Listen-Sektion einlesen</short>
      </element>
      <element name="TCustomRegCheckListBox.GetItemsByRegistry.Result">
        <short>Ergebnis des Vorganges</short>
        <descr>Wenn erfolgreich dann True</descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshMerge">
        <short>MergeData-Eigenschaft setzen</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es wird das Merge von Listendaten ein- oder ausgeschaltet.
Wenn Listendaten nicht vollständig sind und diese aus den Standards ergänzt werden können, kann mit MergeData=True dies durchgeführt werden.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.RefreshMergeDataProperty(False, rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.RefreshMergeDataProperty(False, rlbxCheckListBox1.Name);</p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshMerge.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.ClearClientItems">
        <short>Listen-Sektion der Daten für die Liste löschen</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. 
Wenn ItemsByRegistry der RegistrySettings auf True steht, werden die Daten der Listen-Section aus denen sich die Liste aufbaut gelöscht. 
Wenn ReadDefaults der RegistrySettings auf True steht wird die Liste aus den Standards neu aufgebaut, ansonsten bleibt die Liste leer.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.ClearClientItems(rlbxCheckListBox1.Name, True, 'Liste löschen?');</p><p>oder</p><p>RegistrySource1.ClearClientItems(rlbxCheckListBox1.Name, True, 'Liste löschen?'); </p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.ClearClientItems.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.ShowEditDialog">
        <short>RootKeys bearbeiten</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es wird der Bearbeitungsdialog für die RootKeys zur Verfügung gestellt.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.ShowClientEditDialog(rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.ShowClientEditDialog(rlbxCheckListBox1.Name);</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.ShowEditDialog.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.FreeRegistrySource">
        <short>RegistrySource entfernen</short>
        <descr>Löscht den eigenen Eintrag aus der Clientliste des angebundenen TRegistrySource-Ojektes und entfernt das Object aus dem eignen Context.



<p>Beispiel:</p><p>RegistrySource1.FreeRegistrySource(rlbxCheckListBox1.Name);</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.FreeRegistrySource.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshWriteAdHoc">
        <short>DoWriteAdHoc-Eigenschaft setzen</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es wird das automatische Schreiben von Daten ein- oder ausgeschaltet.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.RefreshWriteAdHocProperty(False, rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.RefreshWriteAdHocProperty(False, rlbxCheckListBox1.Name);</p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshWriteAdHoc.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshSync">
        <short>DoSyncData-Eigenschaft setzen</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es wird die Synchronisation ein- oder ausgeschaltet.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.RefreshSyncProperty(False, rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.RefreshSyncProperty(False, rlbxCheckListBox1.Name);</p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshSync.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshSettings">
        <short>RootKeys aktualiseren (s. RefreshRegistrySettings)</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es werden alle RootKeys aus der TRegistrySource aktualisiert.


<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.RefreshSettings(rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.RefreshSettings(rlbxCheckListBox1.Name);</p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshSettings.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshData">
        <short>Daten aus der Registry lesen</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es werden Daten aus der Registry ausgelesen.



<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.RefreshClientData(rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.RefreshClientData(rlbxCheckListBox1.Name); </p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.RefreshData.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.PostData">
        <short>Daten in die Registry schreiben</short>
        <descr>Die Methode wird von TRegistrySource über eine Message aufgerufen. Es werden alle Daten, welche noch nicht in die Registry geschrieben wurden in die Registry geschrieben.



<p>Beispiel:</p><p>rlbxCheckListBox1.RegistrySource.PostClientData(rlbxCheckListBox1.Name);</p><p>oder</p><p>RegistrySource1.PostClientData(rlbxCheckListBox1.Name);</p><p>Ein Leerstring anstatt rlbxCheckListBox1.Name wird alle angebundenen Steuerelemente einer RegistrySource bearbeiten.</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.PostData.aMessage">
        <short>Von TRegistrySource gesendete Message</short>
        <descr>s. regmsg.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.SetName">
        <short>s. LCL Documentation</short>
        <descr>Wird auch den Namen in der Clientliste des angebundenen TRegistrySource-Objektes anpassen.</descr>
      </element>
      <element name="TCustomRegCheckListBox.SetName.NewName">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.OnChangeSettings">
        <short>s. TOnRegistrySettingsChange in regtype.pas</short>
      </element>
      <element name="TCustomRegCheckListBox.OnChangeSettings.Sender">
        <short>s. TOnRegistrySettingsChange in regtype.pas</short>
      </element>
      <element name="TCustomRegCheckListBox.SetRegistrySource">
        <short>s. RegistrySource</short>
      </element>
      <element name="TCustomRegCheckListBox.SetRegistrySource.aRegistrySource">
        <short>s. RegistrySource</short>
      </element>
      <element name="TCustomRegCheckListBox.GetEditDialog">
        <short>Rootkeys bearbeiten (s. ShowEditDialog)</short>
        <descr>Es wird der Bearbeitungsdialog für die RootKeys zur Verfügung gestellt.</descr>
      </element>
      <element name="TCustomRegCheckListBox.GetEditDialog.Result">
        <short>Ergebnis des Vorganges</short>
        <descr>Wenn erfolgreich dann True</descr>
      </element>
      <element name="TCustomRegCheckListBox.GetEditDialog.aEdit">
        <short>Bearbeitungsmodus</short>
        <descr>s. EditClientRootKeys in TCustomRegistrySource</descr>
      </element>
      <element name="TCustomRegCheckListBox.GetEditDialog.aAtDesignTime">
        <short>Designstatus</short>
        <descr>s. TRegBaseForm</descr>
      </element>
      <element name="TCustomRegCheckListBox.RegistrySettings">
        <short>Erweiterte Eigenschaften</short>
        <descr>s. TCustomRegistrySettings in regtype.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.RegistrySource">
        <short>Zugriff auf die Registry, Verwaltung von Grundschlüsseln, etc.</short>
        <descr>s. TCustomRegistrySource in regsourcen.pas</descr>
      </element>
      <element name="TCustomRegCheckListBox.ClearItems">
        <short>Listen-Sektion der Daten für die Liste löschen</short>
        <descr>Wenn ItemsByRegistry der RegistrySettings auf True steht, werden die Daten der Listen-Section aus denen sich die Liste aufbaut gelöscht. 
Wenn ReadDefaults der RegistrySettings auf True steht wird die Liste aus den Standards neu aufgebaut, ansonsten bleibt die Liste leer.


<p>Beispiel:</p><p>rlbxCheckListBox1.ClearItems(True, 'Liste löschen?');</p>
        </descr>
      </element>
      <element name="TCustomRegCheckListBox.ClearItems.aAskFor">
        <short>Bestätigungsabfrage stellen</short>
        <descr>Wenn True wird eine Bestätigungsabfrage vor dem Löschen der Liste gestellt.</descr>
      </element>
      <element name="TCustomRegCheckListBox.ClearItems.aMsg">
        <short>Bestätigungsabfrage</short>
        <descr>Die Bestätigungsabfrage muss so gestellt werden, das eine positve Antwort immer mit mrYes bestätigt wird.</descr>
      </element>
      <element name="TCustomRegCheckListBox.Click">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.AfterConstruction">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.ReadFromReg">
        <short>Datenwert aus der Registry lesen</short>
      </element>
      <element name="TCustomRegCheckListBox.ReadFromReg.Result">
        <short>Ergebnis des Vorganges</short>
        <descr>Wenn erfolgreich dann True</descr>
      </element>
      <element name="TCustomRegCheckListBox.WriteToReg">
        <short>Datenwert in die Registry schreiben</short>
      </element>
      <element name="TCustomRegCheckListBox.WriteToReg.Result">
        <short>Ergebnis des Vorganges</short>
        <descr>Wenn erfolgreich dann True</descr>
      </element>
      <element name="TCustomRegCheckListBox.Create">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.Create.AOwner">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.Destroy">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.IsModified">
        <short>Bearbeitungsflag</short>
        <descr>Wenn sich der Itemindex geändert hat, wird bis zum schreiben in die Registry das Flag auf True gesetzt.</descr>
      </element>
      <element name="TRegCheckListBox">
        <short>Instanzklasse für die LCL</short>
      </element>
      <element name="TRegCheckListBox.RegistrySettings">
        <short>Eigenschaft veröffentlicht</short>
      </element>
      <element name="TRegCheckListBox.RegistrySource">
        <short>Eigenschaft veröffentlicht</short>
      </element>
      <element name="Register">
        <short>s. LCL Documentation</short>
        <descr>TRegCheckListBox und TRegistryControlComponentEditor für TRegCheckListBox registrieren.</descr>
      </element>
      <short>TRegCheckListBox</short>
      <descr>Das Modul stellt die TRegCheckListBox der LazarusRegistrycontrols zur Verfügung.</descr>
      <element name="TCustomRegCheckListBox.SetCheckedItemsByList">
        <short>Checkstatus eines Eintrages setzen</short>
      </element>
      <element name="TCustomRegCheckListBox.SaveItemsStatesToReg">
        <short>Zustand der Einträge sichern</short>
      </element>
      <element name="TCustomRegCheckListBox.SaveItemsStatesToReg.aOnlyByItemIndex">
        <short>Art der Sicherung</short>
        <descr>Wenn True, wird nur der ItemIndex gesichert, ansonsten wird auch der Checkstatus gesichert.</descr>
      </element>
      <element name="TCustomRegCheckListBox.SetCheckedItemsByList.aList">
        <short>Einträge in der Liste</short>
      </element>
      <element name="TCustomRegCheckListBox.SetCheckedItemsByList.aCheckOnly">
        <short>Art der Bearbeitung</short>
      </element>
      <element name="TCustomRegCheckListBox.ReadWriteInfo.aType">
        <short>test</short>
      </element>
      <element name="TCustomRegCheckListBox.GetItemsByRegistry.aCheckOnly">
        <short>test</short>
      </element>
      <element name="TCustomRegCheckListBox.ItemClick">
        <short>s. LCL Documentation</short>
      </element>
      <element name="TCustomRegCheckListBox.ItemClick.AIndex">
        <short>s. LCL Documentation</short>
      </element>
    </module>
    <!-- regchecklistbox -->
  </package>
</fpdoc-descriptions>
